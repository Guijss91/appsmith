-- Obter id_pontista a partir da matricula do usuário
WITH pontista_info AS (
    SELECT idpontista
    FROM zenite.pontista p
    INNER JOIN zenite.usuario u ON p.usuario_idusuario = u.idusuario
    WHERE u.matricula = {{appsmith.store.matricula}}
),
-- Verificar se já existe um registro para o id_pontista na data atual
current_day_punch AS (
    SELECT id
    FROM zenite.ponto
    WHERE id_pontista = (SELECT idpontista FROM pontista_info) AND data_ponto = CURRENT_DATE
)
-- Inserir ou atualizar horário de entrada
INSERT INTO zenite.ponto (id_pontista, horario_entrada, data_ponto)
SELECT 
    (SELECT idpontista FROM pontista_info), 
    '{{appsmith.store.horarioBrasilia}}'::TIME(0), 
    CURRENT_DATE
WHERE NOT EXISTS (SELECT 1 FROM current_day_punch)
ON CONFLICT (id_pontista, data_ponto) DO UPDATE 
SET horario_entrada = EXCLUDED.horario_entrada
RETURNING id, horario_entrada, data_ponto;
